
USART.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000026c  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000400  08000408  00010408  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000400  08000400  00010408  2**0
                  CONTENTS
  4 .ARM          00000000  08000400  08000400  00010408  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000400  08000408  00010408  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000400  08000400  00010400  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000404  08000404  00010404  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010408  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00010408  2**0
                  CONTENTS
 10 .bss          00000048  20000000  20000000  00020000  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  20000048  20000048  00020000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00010408  2**0
                  CONTENTS, READONLY
 13 .comment      00000043  00000000  00000000  00010438  2**0
                  CONTENTS, READONLY
 14 .debug_info   00000219  00000000  00000000  0001047b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_abbrev 000000ce  00000000  00000000  00010694  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_aranges 00000060  00000000  00000000  00010768  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_rnglists 0000003f  00000000  00000000  000107c8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_macro  00000f62  00000000  00000000  00010807  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line   000004b1  00000000  00000000  00011769  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    00003c4c  00000000  00000000  00011c1a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_frame  000000d0  00000000  00000000  00015868  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 0000005c  00000000  00000000  00015938  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000000 	.word	0x20000000
 80001b0:	00000000 	.word	0x00000000
 80001b4:	080003e8 	.word	0x080003e8

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000004 	.word	0x20000004
 80001d0:	080003e8 	.word	0x080003e8

080001d4 <setbit>:
void setbit(uint32_t *val,uint32_t pos);
void setbit(uint32_t *val,uint32_t pos);
void togglebit(uint32_t *val,uint32_t pos);

void setbit(uint32_t *val,uint32_t pos)
{
 80001d4:	b480      	push	{r7}
 80001d6:	b083      	sub	sp, #12
 80001d8:	af00      	add	r7, sp, #0
 80001da:	6078      	str	r0, [r7, #4]
 80001dc:	6039      	str	r1, [r7, #0]
	*val=*val|(1<<pos);
 80001de:	687b      	ldr	r3, [r7, #4]
 80001e0:	681b      	ldr	r3, [r3, #0]
 80001e2:	2101      	movs	r1, #1
 80001e4:	683a      	ldr	r2, [r7, #0]
 80001e6:	fa01 f202 	lsl.w	r2, r1, r2
 80001ea:	431a      	orrs	r2, r3
 80001ec:	687b      	ldr	r3, [r7, #4]
 80001ee:	601a      	str	r2, [r3, #0]

}
 80001f0:	bf00      	nop
 80001f2:	370c      	adds	r7, #12
 80001f4:	46bd      	mov	sp, r7
 80001f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80001fa:	4770      	bx	lr

080001fc <main>:
#endif


uint32_t *USART1_CR1,*USART1_CR2,*RCC_APB2ENR,*USART_TDR,*USART_ISR,*USART_BRR,*GPIO_C,*RCC_AHBENR,*GPIO_AFR,*GPIO_AFRL,*GPIO_MODER,* GPIOx_ODR;
int main(void)
{
 80001fc:	b580      	push	{r7, lr}
 80001fe:	af00      	add	r7, sp, #0
   USART1_CR1=(uint32_t *)0x40013800;
 8000200:	4b3c      	ldr	r3, [pc, #240]	; (80002f4 <main+0xf8>)
 8000202:	4a3d      	ldr	r2, [pc, #244]	; (80002f8 <main+0xfc>)
 8000204:	601a      	str	r2, [r3, #0]
   USART1_CR2=(uint32_t *)0x40013804;
 8000206:	4b3d      	ldr	r3, [pc, #244]	; (80002fc <main+0x100>)
 8000208:	4a3d      	ldr	r2, [pc, #244]	; (8000300 <main+0x104>)
 800020a:	601a      	str	r2, [r3, #0]
   RCC_APB2ENR=(uint32_t*)0x40021018;
 800020c:	4b3d      	ldr	r3, [pc, #244]	; (8000304 <main+0x108>)
 800020e:	4a3e      	ldr	r2, [pc, #248]	; (8000308 <main+0x10c>)
 8000210:	601a      	str	r2, [r3, #0]
   USART_TDR=(uint32_t*)0x40013828;
 8000212:	4b3e      	ldr	r3, [pc, #248]	; (800030c <main+0x110>)
 8000214:	4a3e      	ldr	r2, [pc, #248]	; (8000310 <main+0x114>)
 8000216:	601a      	str	r2, [r3, #0]
   USART_ISR=(uint32_t*)0x4001381c;
 8000218:	4b3e      	ldr	r3, [pc, #248]	; (8000314 <main+0x118>)
 800021a:	4a3f      	ldr	r2, [pc, #252]	; (8000318 <main+0x11c>)
 800021c:	601a      	str	r2, [r3, #0]
   USART_BRR=(uint32_t *)0x4001380c;
 800021e:	4b3f      	ldr	r3, [pc, #252]	; (800031c <main+0x120>)
 8000220:	4a3f      	ldr	r2, [pc, #252]	; (8000320 <main+0x124>)
 8000222:	601a      	str	r2, [r3, #0]
   RCC_AHBENR=(uint32_t*)0x40021014;
 8000224:	4b3f      	ldr	r3, [pc, #252]	; (8000324 <main+0x128>)
 8000226:	4a40      	ldr	r2, [pc, #256]	; (8000328 <main+0x12c>)
 8000228:	601a      	str	r2, [r3, #0]
   GPIO_MODER=(uint32_t*)0x48001000;
 800022a:	4b40      	ldr	r3, [pc, #256]	; (800032c <main+0x130>)
 800022c:	4a40      	ldr	r2, [pc, #256]	; (8000330 <main+0x134>)
 800022e:	601a      	str	r2, [r3, #0]
    GPIOx_ODR=(uint32_t*)0x48001014;
 8000230:	4b40      	ldr	r3, [pc, #256]	; (8000334 <main+0x138>)
 8000232:	4a41      	ldr	r2, [pc, #260]	; (8000338 <main+0x13c>)
 8000234:	601a      	str	r2, [r3, #0]
   setbit(RCC_AHBENR,19);
 8000236:	4b3b      	ldr	r3, [pc, #236]	; (8000324 <main+0x128>)
 8000238:	681b      	ldr	r3, [r3, #0]
 800023a:	2113      	movs	r1, #19
 800023c:	4618      	mov	r0, r3
 800023e:	f7ff ffc9 	bl	80001d4 <setbit>
   setbit(RCC_APB2ENR,14);
 8000242:	4b30      	ldr	r3, [pc, #192]	; (8000304 <main+0x108>)
 8000244:	681b      	ldr	r3, [r3, #0]
 8000246:	210e      	movs	r1, #14
 8000248:	4618      	mov	r0, r3
 800024a:	f7ff ffc3 	bl	80001d4 <setbit>
   *USART_BRR=0x341;
 800024e:	4b33      	ldr	r3, [pc, #204]	; (800031c <main+0x120>)
 8000250:	681b      	ldr	r3, [r3, #0]
 8000252:	f240 3241 	movw	r2, #833	; 0x341
 8000256:	601a      	str	r2, [r3, #0]
   GPIO_C=(uint32_t*)0x48000800;
 8000258:	4b38      	ldr	r3, [pc, #224]	; (800033c <main+0x140>)
 800025a:	4a39      	ldr	r2, [pc, #228]	; (8000340 <main+0x144>)
 800025c:	601a      	str	r2, [r3, #0]
   setbit(GPIO_C,11);
 800025e:	4b37      	ldr	r3, [pc, #220]	; (800033c <main+0x140>)
 8000260:	681b      	ldr	r3, [r3, #0]
 8000262:	210b      	movs	r1, #11
 8000264:	4618      	mov	r0, r3
 8000266:	f7ff ffb5 	bl	80001d4 <setbit>
   setbit(GPIO_C,9);
 800026a:	4b34      	ldr	r3, [pc, #208]	; (800033c <main+0x140>)
 800026c:	681b      	ldr	r3, [r3, #0]
 800026e:	2109      	movs	r1, #9
 8000270:	4618      	mov	r0, r3
 8000272:	f7ff ffaf 	bl	80001d4 <setbit>
   setbit(RCC_AHBENR,21);
 8000276:	4b2b      	ldr	r3, [pc, #172]	; (8000324 <main+0x128>)
 8000278:	681b      	ldr	r3, [r3, #0]
 800027a:	2115      	movs	r1, #21
 800027c:	4618      	mov	r0, r3
 800027e:	f7ff ffa9 	bl	80001d4 <setbit>

   GPIO_AFRL=(uint32_t*)0x48000820;
 8000282:	4b30      	ldr	r3, [pc, #192]	; (8000344 <main+0x148>)
 8000284:	4a30      	ldr	r2, [pc, #192]	; (8000348 <main+0x14c>)
 8000286:	601a      	str	r2, [r3, #0]
   *GPIO_AFRL =*GPIO_AFRL| (7<<16);
 8000288:	4b2e      	ldr	r3, [pc, #184]	; (8000344 <main+0x148>)
 800028a:	681b      	ldr	r3, [r3, #0]
 800028c:	681a      	ldr	r2, [r3, #0]
 800028e:	4b2d      	ldr	r3, [pc, #180]	; (8000344 <main+0x148>)
 8000290:	681b      	ldr	r3, [r3, #0]
 8000292:	f442 22e0 	orr.w	r2, r2, #458752	; 0x70000
 8000296:	601a      	str	r2, [r3, #0]
   *GPIO_AFRL =*GPIO_AFRL| (7<<20);
 8000298:	4b2a      	ldr	r3, [pc, #168]	; (8000344 <main+0x148>)
 800029a:	681b      	ldr	r3, [r3, #0]
 800029c:	681a      	ldr	r2, [r3, #0]
 800029e:	4b29      	ldr	r3, [pc, #164]	; (8000344 <main+0x148>)
 80002a0:	681b      	ldr	r3, [r3, #0]
 80002a2:	f442 02e0 	orr.w	r2, r2, #7340032	; 0x700000
 80002a6:	601a      	str	r2, [r3, #0]
   setbit(GPIO_MODER,30);
 80002a8:	4b20      	ldr	r3, [pc, #128]	; (800032c <main+0x130>)
 80002aa:	681b      	ldr	r3, [r3, #0]
 80002ac:	211e      	movs	r1, #30
 80002ae:	4618      	mov	r0, r3
 80002b0:	f7ff ff90 	bl	80001d4 <setbit>

   //setbit(USART1_CR1,10);
   //setbit(USART1_CR2,20);

   //setbit(USART1_CR2,11);
   setbit(USART1_CR1,0);
 80002b4:	4b0f      	ldr	r3, [pc, #60]	; (80002f4 <main+0xf8>)
 80002b6:	681b      	ldr	r3, [r3, #0]
 80002b8:	2100      	movs	r1, #0
 80002ba:	4618      	mov	r0, r3
 80002bc:	f7ff ff8a 	bl	80001d4 <setbit>

     //setbit(USART1_CR1,1);
     setbit(USART1_CR1,2);
 80002c0:	4b0c      	ldr	r3, [pc, #48]	; (80002f4 <main+0xf8>)
 80002c2:	681b      	ldr	r3, [r3, #0]
 80002c4:	2102      	movs	r1, #2
 80002c6:	4618      	mov	r0, r3
 80002c8:	f7ff ff84 	bl	80001d4 <setbit>
    // setbit(USART_TDR,0);
     *USART_TDR='A';
 80002cc:	4b0f      	ldr	r3, [pc, #60]	; (800030c <main+0x110>)
 80002ce:	681b      	ldr	r3, [r3, #0]
 80002d0:	2241      	movs	r2, #65	; 0x41
 80002d2:	601a      	str	r2, [r3, #0]
      //setbit(USART_TDR,1);
      //setbit(USART_TDR,2);
   while(!(*USART_ISR&(1<<5)));
 80002d4:	bf00      	nop
 80002d6:	4b0f      	ldr	r3, [pc, #60]	; (8000314 <main+0x118>)
 80002d8:	681b      	ldr	r3, [r3, #0]
 80002da:	681b      	ldr	r3, [r3, #0]
 80002dc:	f003 0320 	and.w	r3, r3, #32
 80002e0:	2b00      	cmp	r3, #0
 80002e2:	d0f8      	beq.n	80002d6 <main+0xda>

   setbit(GPIOx_ODR,15);
 80002e4:	4b13      	ldr	r3, [pc, #76]	; (8000334 <main+0x138>)
 80002e6:	681b      	ldr	r3, [r3, #0]
 80002e8:	210f      	movs	r1, #15
 80002ea:	4618      	mov	r0, r3
 80002ec:	f7ff ff72 	bl	80001d4 <setbit>
   while(1)
 80002f0:	e7fe      	b.n	80002f0 <main+0xf4>
 80002f2:	bf00      	nop
 80002f4:	2000001c 	.word	0x2000001c
 80002f8:	40013800 	.word	0x40013800
 80002fc:	20000020 	.word	0x20000020
 8000300:	40013804 	.word	0x40013804
 8000304:	20000024 	.word	0x20000024
 8000308:	40021018 	.word	0x40021018
 800030c:	20000028 	.word	0x20000028
 8000310:	40013828 	.word	0x40013828
 8000314:	2000002c 	.word	0x2000002c
 8000318:	4001381c 	.word	0x4001381c
 800031c:	20000030 	.word	0x20000030
 8000320:	4001380c 	.word	0x4001380c
 8000324:	20000038 	.word	0x20000038
 8000328:	40021014 	.word	0x40021014
 800032c:	20000040 	.word	0x20000040
 8000330:	48001000 	.word	0x48001000
 8000334:	20000044 	.word	0x20000044
 8000338:	48001014 	.word	0x48001014
 800033c:	20000034 	.word	0x20000034
 8000340:	48000800 	.word	0x48000800
 8000344:	2000003c 	.word	0x2000003c
 8000348:	48000820 	.word	0x48000820

0800034c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800034c:	480d      	ldr	r0, [pc, #52]	; (8000384 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800034e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000350:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000354:	480c      	ldr	r0, [pc, #48]	; (8000388 <LoopForever+0x6>)
  ldr r1, =_edata
 8000356:	490d      	ldr	r1, [pc, #52]	; (800038c <LoopForever+0xa>)
  ldr r2, =_sidata
 8000358:	4a0d      	ldr	r2, [pc, #52]	; (8000390 <LoopForever+0xe>)
  movs r3, #0
 800035a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800035c:	e002      	b.n	8000364 <LoopCopyDataInit>

0800035e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800035e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000360:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000362:	3304      	adds	r3, #4

08000364 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000364:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000366:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000368:	d3f9      	bcc.n	800035e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800036a:	4a0a      	ldr	r2, [pc, #40]	; (8000394 <LoopForever+0x12>)
  ldr r4, =_ebss
 800036c:	4c0a      	ldr	r4, [pc, #40]	; (8000398 <LoopForever+0x16>)
  movs r3, #0
 800036e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000370:	e001      	b.n	8000376 <LoopFillZerobss>

08000372 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000372:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000374:	3204      	adds	r2, #4

08000376 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000376:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000378:	d3fb      	bcc.n	8000372 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800037a:	f000 f811 	bl	80003a0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800037e:	f7ff ff3d 	bl	80001fc <main>

08000382 <LoopForever>:

LoopForever:
  b LoopForever
 8000382:	e7fe      	b.n	8000382 <LoopForever>
  ldr   r0, =_estack
 8000384:	2000a000 	.word	0x2000a000
  ldr r0, =_sdata
 8000388:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800038c:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000390:	08000408 	.word	0x08000408
  ldr r2, =_sbss
 8000394:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000398:	20000048 	.word	0x20000048

0800039c <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800039c:	e7fe      	b.n	800039c <ADC1_2_IRQHandler>
	...

080003a0 <__libc_init_array>:
 80003a0:	b570      	push	{r4, r5, r6, lr}
 80003a2:	4d0d      	ldr	r5, [pc, #52]	; (80003d8 <__libc_init_array+0x38>)
 80003a4:	4c0d      	ldr	r4, [pc, #52]	; (80003dc <__libc_init_array+0x3c>)
 80003a6:	1b64      	subs	r4, r4, r5
 80003a8:	10a4      	asrs	r4, r4, #2
 80003aa:	2600      	movs	r6, #0
 80003ac:	42a6      	cmp	r6, r4
 80003ae:	d109      	bne.n	80003c4 <__libc_init_array+0x24>
 80003b0:	4d0b      	ldr	r5, [pc, #44]	; (80003e0 <__libc_init_array+0x40>)
 80003b2:	4c0c      	ldr	r4, [pc, #48]	; (80003e4 <__libc_init_array+0x44>)
 80003b4:	f000 f818 	bl	80003e8 <_init>
 80003b8:	1b64      	subs	r4, r4, r5
 80003ba:	10a4      	asrs	r4, r4, #2
 80003bc:	2600      	movs	r6, #0
 80003be:	42a6      	cmp	r6, r4
 80003c0:	d105      	bne.n	80003ce <__libc_init_array+0x2e>
 80003c2:	bd70      	pop	{r4, r5, r6, pc}
 80003c4:	f855 3b04 	ldr.w	r3, [r5], #4
 80003c8:	4798      	blx	r3
 80003ca:	3601      	adds	r6, #1
 80003cc:	e7ee      	b.n	80003ac <__libc_init_array+0xc>
 80003ce:	f855 3b04 	ldr.w	r3, [r5], #4
 80003d2:	4798      	blx	r3
 80003d4:	3601      	adds	r6, #1
 80003d6:	e7f2      	b.n	80003be <__libc_init_array+0x1e>
 80003d8:	08000400 	.word	0x08000400
 80003dc:	08000400 	.word	0x08000400
 80003e0:	08000400 	.word	0x08000400
 80003e4:	08000404 	.word	0x08000404

080003e8 <_init>:
 80003e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80003ea:	bf00      	nop
 80003ec:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80003ee:	bc08      	pop	{r3}
 80003f0:	469e      	mov	lr, r3
 80003f2:	4770      	bx	lr

080003f4 <_fini>:
 80003f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80003f6:	bf00      	nop
 80003f8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80003fa:	bc08      	pop	{r3}
 80003fc:	469e      	mov	lr, r3
 80003fe:	4770      	bx	lr
